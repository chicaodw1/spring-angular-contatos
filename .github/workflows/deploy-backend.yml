# name: Deploy Backend to EC2

# on:
#   push:
#     tags:
#       - "back-v*"

# jobs:
#   deploy:
#     name: Deploy to EC2
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout c√≥digo
#         uses: actions/checkout@v4

#       - name: Limpa target local
#         run: rm -rf backend/target

#       - name: Limpa projeto antigo no EC2
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ec2-user
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             echo "üßπ Limpando projeto antigo no EC2..."
#             rm -rf spring-angular-contatos/backend/*

#       - name: Copia arquivos para EC2
#         uses: appleboy/scp-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ec2-user
#           key: ${{ secrets.EC2_SSH_KEY }}
#           source: "backend"
#           target: "~/spring-angular-contatos"

#       - name: SSH e build
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ec2-user
#           key: ${{ secrets.EC2_SSH_KEY }}
#           script: |
#             cd spring-angular-contatos/backend

#             echo "üßπ Limpando arquivos antigos..."
#             rm -rf target/

#             chmod +x mvnw

#             echo "üí° Exportando vari√°veis de ambiente..."
#             export DB_URL="${{ secrets.DB_URL }}"
#             export DB_USERNAME="${{ secrets.DB_USERNAME }}"
#             export DB_PASSWORD="${{ secrets.DB_PASSWORD }}"
#             export COGNITO_ISSUER_URI="${{ secrets.COGNITO_ISSUER_URI }}"
#             export COGNITO_REGION="${{ secrets.COGNITO_REGION }}"
#             export COGNITO_USER_POOL_ID="${{ secrets.COGNITO_USER_POOL_ID }}"
#             export COGNITO_CLIENT_ID="${{ secrets.COGNITO_CLIENT_ID }}"

#             echo "üõ†Ô∏è Buildando projeto..."
#             ./mvnw clean install || { echo "‚ùå Build falhou!"; exit 1; }

#             echo "üîç Procurando JAR..."
#             JAR_NAME=$(ls target/*.jar | head -n 1)

#             echo "üõë Matando app antigo..."
#             pkill -f 'java' && echo "Aplica√ß√£o antiga encerrada." || echo "Nenhuma aplica√ß√£o em execu√ß√£o."

#             echo "üöÄ Subindo app com vari√°veis de ambiente..."
#             nohup env \
#               DB_URL="${{ secrets.DB_URL }}" \
#               DB_USERNAME="${{ secrets.DB_USERNAME }}" \
#               DB_PASSWORD="${{ secrets.DB_PASSWORD }}" \
#               COGNITO_ISSUER_URI="${{ secrets.COGNITO_ISSUER_URI }}" \
#               COGNITO_REGION="${{ secrets.COGNITO_REGION }}" \
#               COGNITO_USER_POOL_ID="${{ secrets.COGNITO_USER_POOL_ID }}" \
#               COGNITO_CLIENT_ID="${{ secrets.COGNITO_CLIENT_ID }}" \
#               java -jar $JAR_NAME > app.log 2>&1 &

#             echo "‚úÖ Aplica√ß√£o iniciada com sucesso!"
#             exit 0
name: Deploy Backend to EC2

on:
  push:
    tags:
      - "back-v*"

jobs:
  deploy:
    name: Build and Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build do backend
        run: |
          cd backend
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      - name: Copia o JAR para EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "backend/target/backend-0.0.1-SNAPSHOT.jar"
          target: "~/spring-angular-contatos"

      - name: Atualiza .env e sobe a aplica√ß√£o
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/spring-angular-contatos

            echo "üîí Atualizando vari√°veis de ambiente..."
cat <<EOF > .env
DB_URL=${{ secrets.DB_URL }}
DB_USERNAME=${{ secrets.DB_USERNAME }}
DB_PASSWORD=${{ secrets.DB_PASSWORD }}
COGNITO_ISSUER_URI=${{ secrets.COGNITO_ISSUER_URI }}
COGNITO_REGION=${{ secrets.COGNITO_REGION }}
COGNITO_USER_POOL_ID=${{ secrets.COGNITO_USER_POOL_ID }}
COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }}
EOF

            chmod 600 .env

            echo "üõë Encerrando aplica√ß√£o antiga se existir..."
            pkill -f 'backend-0.0.1-SNAPSHOT.jar' || echo "Nenhuma aplica√ß√£o antiga em execu√ß√£o"

            echo "üöÄ Iniciando aplica√ß√£o..."
            nohup bash -c "source .env && java -jar backend-0.0.1-SNAPSHOT.jar" > app.log 2>&1 &

            echo "‚úÖ Aplica√ß√£o iniciada!"

            echo "üîç Verificando se a aplica√ß√£o est√° de p√©..."
            sleep 5
            curl -f http://localhost:8080/actuator/health || {
              echo "‚ùå A aplica√ß√£o n√£o respondeu na porta 8080!";
              exit 1;
            }
