name: Deploy Backend to EC2

on:
  push:
    tags:
      - "back-v*"

jobs:
  deploy:
    name: Build and Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build do backend
        run: |
          cd backend
          chmod +x mvnw
          ./mvnw clean package -DskipTests

      - name: Copia o JAR para EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "backend/target/backend-0.0.1-SNAPSHOT.jar"
          target: "~/spring-angular-contatos/backend/target"

      - name: Sobe a aplicação no EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/spring-angular-contatos/backend

            echo "🧼 Limpando backend antigo"
            rm -rf ~/spring-angular-contatos/backend/*

            echo "🔒 Gravando variáveis no .env"
            cat > .env <<EOF
            DB_URL=${{ secrets.DB_URL }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            COGNITO_ISSUER_URI=${{ secrets.COGNITO_ISSUER_URI }}
            COGNITO_REGION=${{ secrets.COGNITO_REGION }}
            COGNITO_USER_POOL_ID=${{ secrets.COGNITO_USER_POOL_ID }}
            COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }}
            EOF

            echo "✅ Garantindo persistência das variáveis no .bash_profile"
            grep -qxF "export \$(cat ~/spring-angular-contatos/backend/.env | xargs)" ~/.bash_profile || echo "export \$(cat ~/spring-angular-contatos/backend/.env | xargs)" >> ~/.bash_profile

            echo "🧹 Limpando versão anterior do JAR (se existir)"
            rm -f ~/spring-angular-contatos/backend/target/backend-0.0.1-SNAPSHOT.jar.old || true

            echo "🚀 Iniciando aplicação com variáveis carregadas"
            nohup env $(cat .env | xargs) java -jar target/backend-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod > ~/app.log 2>&1 &

            echo "⏳ Aguardando iniciar"
            sleep 10

            echo "🔍 Verificando saúde"
            curl -f http://localhost:8080/actuator/health || {
              echo "❌ A aplicação não respondeu na porta 8080!";
              exit 1;
            }

            echo "✅ Aplicação em execução com sucesso"

            echo "🛠️ Registrando no crontab para iniciar com o sistema"
            (crontab -l 2>/dev/null; echo "@reboot cd ~/spring-angular-contatos/backend && export \$(cat .env | xargs) && nohup java -jar target/backend-0.0.1-SNAPSHOT.jar --spring.profiles.active=prod > ~/app.log 2>&1") | sort -u | crontab -
